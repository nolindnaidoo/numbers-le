{
	"name": "numbers-le",
	"publisher": "nolindnaidoo",
	"displayName": "Numbers-LE",
	"description": "Zero Hassle Number Extraction from JSON, YAML, CSV, TOML, INI, and .ENV",
	"version": "1.1.0",
	"license": "MIT",
	"author": {
		"name": "Nolin D Naidoo",
		"url": "https://github.com/nolindnaidoo"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/nolindnaidoo/numbers-le.git"
	},
	"bugs": {
		"url": "https://github.com/nolindnaidoo/numbers-le/issues"
	},
	"homepage": "https://github.com/nolindnaidoo/numbers-le#readme",
	"engines": {
		"vscode": "^1.70.0",
		"node": ">=20.0.0"
	},
	"categories": [
		"Other",
		"Programming Languages",
		"Linters"
	],
	"keywords": [
		"numbers",
		"numeric",
		"extract",
		"extractor",
		"extraction",
		"data",
		"analysis",
		"validation",
		"json",
		"yaml",
		"csv",
		"toml",
		"ini",
		"env",
		"math",
		"statistics",
		"flatten",
		"sort",
		"sorting",
		"compliance"
	],
	"icon": "src/assets/images/icon.png",
	"main": "./dist/extension.js",
	"l10n": "./package.nls.json",
	"activationEvents": [
		"onLanguage:json",
		"onLanguage:yaml",
		"onLanguage:yml",
		"onLanguage:csv",
		"onLanguage:toml",
		"onLanguage:ini",
		"onCommand:numbers-le.extractNumbers",
		"onCommand:numbers-le.postProcess.dedupe",
		"onCommand:numbers-le.postProcess.sort",
		"onCommand:numbers-le.csv.toggleStreaming",
		"onCommand:numbers-le.openSettings",
		"onCommand:numbers-le.help"
	],
	"capabilities": {
		"virtualWorkspaces": {
			"supported": "limited",
			"description": "%manifest.capability.untrusted-workspaces.desc%"
		},
		"untrustedWorkspaces": {
			"supported": "limited",
			"description": "%manifest.capability.untrusted-workspaces.desc%"
		}
	},
	"contributes": {
		"commands": [
			{
				"command": "numbers-le.extractNumbers",
				"title": "%manifest.command.extract.title%",
				"category": "%manifest.command.category%"
			},
			{
				"command": "numbers-le.postProcess.dedupe",
				"title": "%manifest.command.dedupe.title%",
				"category": "%manifest.command.category%"
			},
			{
				"command": "numbers-le.postProcess.sort",
				"title": "%manifest.command.sort.title%",
				"category": "%manifest.command.category%"
			},
			{
				"command": "numbers-le.csv.toggleStreaming",
				"title": "%manifest.command.csv.toggle-streaming.title%",
				"category": "%manifest.command.category%"
			},
			{
				"command": "numbers-le.openSettings",
				"title": "%manifest.command.settings.title%",
				"category": "%manifest.command.category%"
			},
			{
				"command": "numbers-le.help",
				"title": "%manifest.command.help.title%",
				"category": "%manifest.command.category%"
			}
		],
		"keybindings": [
			{
				"command": "numbers-le.extractNumbers",
				"key": "ctrl+alt+n",
				"mac": "cmd+alt+n",
				"when": "editorTextFocus"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "numbers-le.extractNumbers",
					"when": "resourceExtname in .json || resourceExtname in .yaml || resourceExtname in .yml || resourceExtname in .csv || resourceExtname in .toml || resourceExtname in .ini || resourceExtname in .env",
					"group": "1_modification@1"
				}
			],
			"commandPalette": [
				{
					"command": "numbers-le.extractNumbers"
				},
				{
					"command": "numbers-le.postProcess.dedupe"
				},
				{
					"command": "numbers-le.postProcess.sort"
				},
				{
					"command": "numbers-le.csv.toggleStreaming"
				},
				{
					"command": "numbers-le.openSettings"
				},
				{
					"command": "numbers-le.help"
				}
			]
		},
		"configuration": {
			"title": "%manifest.settings.title%",
			"properties": {
				"numbers-le.copyToClipboardEnabled": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.copy.clipboard.desc%"
				},
				"numbers-le.csv.streamingEnabled": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.csv.streaming.desc%"
				},
				"numbers-le.dedupeEnabled": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.dedupe.desc%"
				},
				"numbers-le.notificationsLevel": {
					"type": "string",
					"default": "silent",
					"enum": [
						"all",
						"important",
						"silent"
					],
					"enumDescriptions": [
						"%manifest.settings.notifications.level.option.all%",
						"%manifest.settings.notifications.level.option.important%",
						"%manifest.settings.notifications.level.option.silent%"
					],
					"description": "%manifest.settings.notifications.level.desc%"
				},
			"numbers-le.postProcess.openInNewFile": {
				"type": "boolean",
				"default": true,
				"description": "%manifest.settings.open.new-file.desc%"
			},
			"numbers-le.openResultsSideBySide": {
				"type": "boolean",
				"default": true,
				"description": "%manifest.settings.open.side-by-side.desc%"
			},
				"numbers-le.safety.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.safety.enabled.desc%"
				},
				"numbers-le.safety.fileSizeWarnBytes": {
					"type": "number",
					"default": 1000000,
					"minimum": 1000,
					"description": "%manifest.settings.safety.warn.file-size.desc%"
				},
				"numbers-le.safety.largeOutputLinesThreshold": {
					"type": "number",
					"default": 50000,
					"minimum": 100,
					"description": "%manifest.settings.safety.warn.large-output.desc%"
				},
				"numbers-le.safety.manyDocumentsThreshold": {
					"type": "number",
					"default": 8,
					"minimum": 1,
					"description": "%manifest.settings.safety.warn.many-documents.desc%"
				},
				"numbers-le.showParseErrors": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.parse-errors.desc%"
				},
				"numbers-le.sortEnabled": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.sort.enabled.desc%"
				},
				"numbers-le.sortMode": {
					"type": "string",
					"default": "off",
					"enum": [
						"off",
						"numeric-asc",
						"numeric-desc",
						"magnitude-asc",
						"magnitude-desc"
					],
					"enumDescriptions": [
						"%manifest.settings.sort.mode.option.off%",
						"%manifest.settings.sort.mode.option.numeric-asc%",
						"%manifest.settings.sort.mode.option.numeric-desc%",
						"%manifest.settings.sort.mode.option.magnitude-asc%",
						"%manifest.settings.sort.mode.option.magnitude-desc%"
					],
					"description": "%manifest.settings.sort.mode.desc%"
				},
				"numbers-le.statusBar.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.statusbar.enabled.desc%"
				},
				"numbers-le.telemetryEnabled": {
					"type": "boolean",
					"default": false,
					"description": "%manifest.settings.telemetry.desc%"
				},
				"numbers-le.analysis.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.analysis.enabled.desc%"
				},
				"numbers-le.analysis.includeStats": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.analysis.stats.desc%"
				},
				"numbers-le.performance.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.performance.enabled.desc%"
				},
				"numbers-le.performance.maxDuration": {
					"type": "number",
					"default": 5000,
					"minimum": 1000,
					"description": "%manifest.settings.performance.max-duration.desc%"
				},
				"numbers-le.performance.maxMemoryUsage": {
					"type": "number",
					"default": 104857600,
					"minimum": 1048576,
					"description": "%manifest.settings.performance.max-memory.desc%"
				},
				"numbers-le.performance.maxCpuUsage": {
					"type": "number",
					"default": 1000000,
					"minimum": 100000,
					"description": "%manifest.settings.performance.max-cpu.desc%"
				},
				"numbers-le.performance.minThroughput": {
					"type": "number",
					"default": 1000,
					"minimum": 100,
					"description": "%manifest.settings.performance.min-throughput.desc%"
				},
				"numbers-le.performance.maxCacheSize": {
					"type": "number",
					"default": 1000,
					"minimum": 100,
					"description": "%manifest.settings.performance.max-cache.desc%"
				},
				"numbers-le.keyboard.shortcuts.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.keyboard.shortcuts.enabled.desc%"
				},
				"numbers-le.keyboard.extractShortcut": {
					"type": "string",
					"default": "ctrl+alt+n",
					"description": "%manifest.settings.keyboard.extract.shortcut.desc%"
				},
				"numbers-le.keyboard.dedupeShortcut": {
					"type": "string",
					"default": "ctrl+alt+d",
					"description": "%manifest.settings.keyboard.dedupe.shortcut.desc%"
				},
				"numbers-le.keyboard.sortShortcut": {
					"type": "string",
					"default": "ctrl+alt+s",
					"description": "%manifest.settings.keyboard.sort.shortcut.desc%"
				},
				"numbers-le.presets.enabled": {
					"type": "boolean",
					"default": true,
					"description": "%manifest.settings.presets.enabled.desc%"
				},
				"numbers-le.presets.defaultPreset": {
					"type": "string",
					"default": "balanced",
					"enum": [
						"minimal",
						"balanced",
						"comprehensive",
						"performance",
						"csv"
					],
					"enumDescriptions": [
						"%manifest.settings.presets.default.option.minimal%",
						"%manifest.settings.presets.default.option.balanced%",
						"%manifest.settings.presets.default.option.comprehensive%",
						"%manifest.settings.presets.default.option.performance%",
						"%manifest.settings.presets.default.option.csv%"
					],
					"description": "%manifest.settings.presets.default.desc%"
				}
			}
		}
	},
	"scripts": {
		"build": "tsc -p ./",
		"clean": "rm -rf dist coverage",
		"clean:i18n": "node -e \"const fs=require('fs');fs.readdirSync('.').filter(f=>f.startsWith('package.nls.')&&f.endsWith('.json')&&f!=='package.nls.json').forEach(f=>fs.unlinkSync(f));try{fs.rmSync('vsix',{recursive:true})}catch(e){}\"",
		"copy:i18n": "cp -f src/i18n/package.nls*.json . || true",
		"watch": "tsc -watch -p ./",
		"test": "vitest run --pool=threads",
		"test:watch": "vitest --pool=threads",
		"test:coverage": "vitest run --coverage --pool=threads",
		"test:ui": "vitest --ui",
		"test:performance": "node --import tsx --test src/extraction/performance.test.ts",
		"performance:report": "npm run test:performance 2>&1 | tee performance-report.txt",
		"lint": "biome check .",
		"lint:fix": "biome check --write .",
		"vscode:prepublish": "npm run build && npm run copy:i18n",
		"package": "mkdir -p release && npx vsce package --out release/${npm_package_name}-${npm_package_version}.vsix && npm run clean:i18n",
		"package:ls": "vsce ls release/${npm_package_name}-${npm_package_version}.vsix --tree | cat",
		"publish": "vsce publish"
	},
	"devDependencies": {
		"@biomejs/biome": "^2.2.5",
		"@iarna/toml": "^2.2.5",
		"@types/ini": "^4.1.1",
		"@types/node": "^24.7.1",
		"@types/vscode": "^1.70.0",
		"@vscode/test-electron": "^2.3.0",
		"@vscode/vsce": "^3.6.2",
		"@vitest/coverage-v8": "^3.2.4",
		"tsx": "^4.20.6",
		"typescript": "^5.9.3",
		"vitest": "^3.2.4"
	},
	"dependencies": {
		"@types/js-yaml": "^4.0.9",
		"csv-parse": "^6.1.0",
		"dotenv": "^17.2.3",
		"ini": "^5.0.0",
		"js-yaml": "^4.1.0",
		"@iarna/toml": "^2.2.5",
		"vscode-nls": "^5.2.0"
	}
}
